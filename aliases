#!/usr/bin/env sh

alias agi="sudo apt-get -y install"
alias agud="sudo apt-get -y update"
alias agug="sudo apt-get -y upgrade"
alias agar="sudo apt-get -y autoremove"
alias agu="agud && agug && agar"
alias neteth="sudo nethogs eth0"
alias real="source ~/.aliases"
alias edal="vi +$ ~/.aliases"
alias ww='weightwatcher'
alias weightwatcher='du -s -h'
alias wh=which
alias cdp="cd .."
alias cdpp="cd ../.."
alias ls="ls --color=auto"
alias ll="ls -lha"
alias heaviest="du -sk * | sort -rn| head -n 20"
alias chmox="chmod +x"

alias npmi="echo 'npm install --production' && npm install --production"
alias npmig="echo 'npm install -g  --production' && npm install -g  --production"
alias npmug='npm uninstall -g'
alias npms="npm start"
alias npmt="npm test"
alias npmtw="npm run test-watch"
alias npmu="npm uninstall"
alias npmis="echo 'npm install --save --production' && npm install --save --production"
alias npmisd="echo 'npm install --save-dev  --production' && npm install --save-dev  --production"
alias npmusd="echo 'npm uninstall --save-dev  --production' && npm uninstall --save-dev  --production"
alias npml="npm run lint"
alias npmb="npm run build"
alias npmbw="npm run build-watch"
alias npmd="npm run dist"
alias npmw="npm run watch"
#alias npmd="npm run debug"
alias npmus="npm uninstall --save"

alias gl="git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
alias glp="git log --patch"
alias ga="git add"
alias gr="git reset"
gs () {
	if [ -z "$1" ]
	then
		git status && git stash list
	else
		git show $1
	fi
}

gss(){
  [[ -z "$1" ]] && 1=0
  git show -p "stash@{${1}}"
}

gsa(){
  [[ -z "$1" ]] && 1=0
  git stash apply "stash@{${1}}"
}

gsd(){
  [[ -z "$1" ]] && 1=0
  git stash drop "stash@{${1}}"
}

gsp(){
  [[ -z "$1" ]] && 1=0
  gsa "$1" && gsd "$1"
}

alias ungc="git reset --soft HEAD^"
alias gd="git diff"
alias gdc="git diff --cached"
alias gco="git checkout"
alias gj="git checkout -B"
gjo () {
  git checkout origin/$1 && git checkout -B $1
}
alias gjom="gjo master"
alias gf="git fetch"
alias gfo="git fetch origin"
alias gfom="git fetch origin master"
alias gcop="git checkout -p"
alias gap="git add --patch"
alias gslast="git show HEAD"

srm(){ mv $@ /tmp }

export LH=http://localhost
curljson () { /usr/bin/curl -s -H "Content-Type: application/json" -H 'Accept: application/json' $@ }

alias filepath="readlink -f"

find_container(){
  docker ps | grep "$@" | awk '{print $1}'
}

alias d=docker
dexec(){
  docker exec -it $( find_container $2 ) $1
  # docker exec -it $2 $1
}
alias dbash="dexec /bin/bash"
alias dsh="dexec /bin/sh"
alias dzsh="dexec /bin/zsh"
alias dk="docker kill"
dka(){ find_container $@ | xargs docker kill }
dlogs(){ find_container $@ | xargs docker logs }
alias dps="docker ps"

echo_blue(){ echo -e "\e[0;34m$@\e[0;0m" }
echo_grey(){ echo -e "\e[0;30m$@\e[0;0m" }

# Source: https://www.shellhacks.com/disk-speed-test-read-write-hdd-ssd-perfomance-linux/
disk_benchmark(){
  echo_blue "WRITE speed"
  sync; dd if=/dev/zero of=tempfile bs=1M count=1024; sync
  echo_blue "Clear disk cache"
  sudo /sbin/sysctl -w vm.drop_caches=3 > /dev/null
  echo_blue "READ speed"
  dd if=tempfile of=/dev/null bs=1M count=1024
  rm tempfile
  echo_grey "(use hdparm to test cache speed. Ex: sudo hdparm -Tt /dev/sda)"
}

alias disk_space="df -h"
